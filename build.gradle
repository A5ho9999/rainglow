plugins {
    id "io.github.p03w.machete" version "1.2.0"
    id "fabric-loom" version "1.0-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "org.quiltmc.quilt-mappings-on-loom" version "4.2.0"
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url = "https://maven.gegy.dev/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
}

configurations {
    shadow
    api.extendsFrom shadow
}

dependencies {
    // versions defined in gradle.properties
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings(loom.layered {
        addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:v2"))
    })
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    include(modImplementation("dev.lambdaurora:spruceui:${project.spruceui_version}"))
    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") { transitive = false }

    // fabric key binding api is required for mod menu, but not shipped with it
    // so we need to pull it in ourselves
    modImplementation(fabricApi.module("fabric-key-binding-api-v1", project.fabric_api_version))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/rainglow.accesswidener")
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
